name: Deployment
on:
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    environment: live
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
     # - name: start maintenance mode on statuspage
     #   run: echo 'test'
     
      - name: get current timestamp
        id: deployment-id
        run: echo "::set-output name=DEPLOYMENT_ID::$(date +%s)"
      
      - name: create new folder with current timestamp
        uses: appleboy/ssh-action@master
        with: 
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: mkdir "${{ secrets.SSO_BASE_PATH }}${{ secrets.DEPLOYMENTS_FOLDER }}/${{ steps.deployment-id.outputs.DEPLOYMENT_ID }}"
      
      - name: upload to new folder
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: src/
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: "${{ secrets.SSO_BASE_PATH }}${{ secrets.DEPLOYMENTS_FOLDER }}/${{ steps.deployment-id.outputs.DEPLOYMENT_ID }}"
      
     # - name: run composer install
      
      
      #- name: create symlink to staging environment
      
      
      #- name: run codeception tests
      
      
      #- name: if tests successful, update symlink of live
      
      
      #- name: remove staging symlink
      
      
     # - name: end maintenance mode
      
      
